# token配置
token_config:
  expire_time: 3600  # token过期时间（秒）
  refresh_before_expire: 300  # token过期前多少秒刷新（5分钟）

test_cases:
  # - case_name: "获取用户信息"
  #   path: "/api/user/info"
  #   method: "GET"
  #   headers:
  #     Authorization: "Bearer {token}"
  #   expected:
  #     status_code: 200
  #     contains_fields: ["$.username", "$.email"]
  #     field_values:
  #       "$.username": "test_user"

  # - case_name: "创建订单"
  #   service: "order_service"
  #   path: "/api/orders"
  #   method: "POST"
  #   headers:
  #     Authorization: "Bearer ${token}"  # 使用变量
  #   data:
  #     user_id: "${user_id}"  # 使用变量
  #     product_id: "123"
  #     quantity: 1
  #   expected:
  #     status_code: 200
  #   save_variables:  # 保存订单信息
  #     order_id: "$.data.order_id"
  #     order_no: "$.data.order_no"

  # - case_name: "支付订单"
  #   service: "payment_service"
  #   path: "/api/pay"
  #   method: "POST"
  #   headers:
  #     Authorization: "Bearer ${token}"
  #   data:
  #     order_id: "${order_id}"  # 使用之前保存的订单ID
  #     order_no: "${order_no}"
  #   expected:
  #     status_code: 200
  #   save_variables:
  #     payment_id: "$.data.payment_id"
  #     transaction_no: "$.data.transaction_no"

  - case_name: "获取院校数据"
    path: "/gk/gkschool/overview"
    method: "GET"
    data:
      word: "清华大学"
      query: "清华大学"
      tab: "intro"
    expected:
      status_code: 200
      contains_fields: ["$.data.ai_volunteer_info", "$.data.alumnus"]
      
      field_types:  # 字段类型断言
        "$.data": dict
        "$.data.alumnus.imgs.imgList": list
      
      field_values:  # 字段值断言
        "$.errno": 0
        # 字典类型的字段值断言
        "$.data.school_basic_info": {
          "administrativeAreaLv1": "北京",
          "attr": "公办",
          "batch": "本科"
        }
        # 嵌套字典的部分字段断言
        "$.data.alumnus": {
          "title": "知名校友"
        }
      
      array_assertions:  # 数组断言
        "$.data.alumnus.imgs.imgList":
          length: 7
          contains:
            - src: "http://t11.baidu.com/it/u=929893111,3246460552&fm=179&app=42&f=JPEG?w=241&h=299&s=E3219B444C737090ACAE0C7903008063"
              title: "朱镕基"
              type: "s"
              url: "https://wapbaike.baidu.com/item/%E6%9C%B1%E9%95%95%E5%9F%BA?fr=zjbk_univ_kg"
              urlType: "tc"
              url_xcx_params: 
                  channel: "1023262h"
                  default_url: "https://wapbaike.baidu.com/item/%E6%9C%B1%E9%95%95%E5%9F%BA?fr=zjbk_univ_kg"
                  swan_from: "1023253u"
                  xcx_appkey: "AZQtr4jkpf90T3X9QMWVLF1bkeV4LXxD"
                  xcx_from: "1081000900000000"
                  xcx_path: "/pages/lemma/lemma"
                  xcx_query: "lemmaTitle=%E6%9C%B1%E9%95%95%E5%9F%BA&lemmaId=116302&fr=zjbk_univ_kg"
    save_variables:
      school: "$.data.school_basic_info.title"

# 场景测试用例
scenario_cases:
  - scenario_name: "商品购买流程"
    description: "从加入购物车到下单支付的完整流程"
    steps:
      - step_name: "加入购物车"
        path: "/api/cart/add"
        method: "POST"
        data:
          product_id: "123"
          quantity: 1
        expected:
          status_code: 200
          field_values:
            "$.code": 0
            "$.message": "success"
        save_variables:
          cart_id: "$.data.cart_id"

      - step_name: "创建订单"
        path: "/api/orders/create"
        method: "POST"
        data:
          cart_id: "${cart_id}"
          address_id: "456"
        expected:
          status_code: 200
          field_values:
            "$.code": 0
            "$.data.order_status": "pending"
        save_variables:
          order_id: "$.data.order_id"
          order_amount: "$.data.amount"

      - step_name: "支付订单"
        path: "/api/payment/pay"
        method: "POST"
        data:
          order_id: "${order_id}"
          amount: "${order_amount}"
          payment_method: "alipay"
        expected:
          status_code: 200
          field_values:
            "$.code": 0
            "$.data.payment_status": "success"
        save_variables:
          payment_id: "$.data.payment_id"

      - step_name: "查询订单状态"
        path: "/api/orders/${order_id}"
        method: "GET"
        expected:
          status_code: 200
          field_values:
            "$.code": 0
            "$.data.order_status": "paid"
            "$.data.payment_status": "success"
